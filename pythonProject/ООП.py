# ООП = ("ООП в Python означает "Объектно-Ориентированное Программирование".
# Это парадигма программирования, которая основана на использовании объектов,
# которые представляют собой экземпляры классов. Классы определяют атрибуты
# (переменные) и методы (функции), которые могут быть использованы объектами
# этого класса. Преимущества ООП в Python включают повышенную модульность кода,
# легкость его понимания и обслуживания, а также возможность повторного использования
# кода. ООП позволяет моделировать реальные объекты и взаимодействия между ними, что
# делает его очень мощным инструментом для разработки программного обеспечения.
# В Python ООП реализуется с использованием классов и объектов, а также концепций
# наследования, инкапсуляции и полиморфизма")


# Python = ("Python - это программный язык высокого уровня, который используется для
# разработки различных типов программ, от веб-приложений до научных вычислений.
# Он известен своей простотой в изучении и использовании, а также обширной стандартной
# библиотекой, которая предоставляет широкий спектр функций для решения различных задач.
# Python поддерживает различные парадигмы программирования, включая объектно-ориентированное,
# процедурное, функциональное и структурное программирование")


# Конструктор = ("Конструктор в Python - это специальный метод класса, который вызывается
# при создании нового объекта этого класса. В Python конструктор обозначается как `__init__`.
# Он используется для инициализации атрибутов объекта и выполнения других действий,
# необходимых при его создании. Конструктор позволяет задать начальные значения для
# переменных объекта и выполнить другие действия, необходимые при его инициализации")


# Объекты = ("Объекты в Python - это экземпляры классов, которые имеют состояние
# (атрибуты) и поведение (методы). Они представляют собой основные строительные
# блоки объектно-ориентированного программирования в Python. Создание объектов
# происходит с помощью вызова конструктора класса. Объекты могут взаимодействовать
# друг с другом и быть использованы для моделирования реальных или абстрактных
# сущностей. Python поддерживает множество встроенных типов объектов, таких как
# строки, списки, словари, кортежи и другие, а также позволяет создавать
# пользовательские классы для определения собственных типов объектов,так же
# это синоним слова переменная")


# Концепции ООП = ("Class, Objects, Polymorphism, Encapsulation, Inheritance, Data Abstraction")
